services:
  jetson-yolo:
    build: .
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # Optional tunables
      - YOLO_MODEL=${YOLO_MODEL:-yolov8n.pt}
      - YOLO_ENGINE=${YOLO_ENGINE:-yolov8n.engine}
      - CONF_THRESH=${CONF_THRESH:-0.80}
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work 
    command: bash

  exporter:
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work 
    command: python3 -m app.tools.export_engine


  alert:
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    # ↓↓↓ Add this block ↓↓↓
    environment:
      # Prefer FFmpeg over TCP with bigger buffers (fix H.264 bytestream errors)
      - OPENCV_FFMPEG_CAPTURE_OPTIONS=rtsp_transport;tcp;stimeout;10000000;buffer_size;10485760;reorder_queue_size;0
      - CAP_PROP_BUFFERSIZE=2

      # If you switch to the GStreamer path in camera_cv2.py, set this to 1
      # (leave it 0 to keep FFmpeg). Latency tunes RTSP jitter buffer.
      - USE_GSTREAMER=0
      - RTSP_LATENCY_MS=200
    # ↑↑↑ End of additions ↑↑↑
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work
    restart: unless-stopped
    depends_on:
      - jetson-yolo
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    command: python3 -m app.app.run

  preview:
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    working_dir: /workspace
    environment:
      - DISPLAY=${DISPLAY}        # pass host DISPLAY (usually :0)
      - QT_X11_NO_MITSHM=1        # avoids MIT-SHM issues in containers
      - OPENCV_FFMPEG_CAPTURE_OPTIONS=rtsp_transport;tcp|stimeout;5000000|max_delay;500000
    volumes:
      - ./work:/workspace/work
      - /tmp/.X11-unix:/tmp/.X11-unix:rw   # X11 socket
    command: python3 -m app.app.preview

