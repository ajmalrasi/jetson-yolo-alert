services:
  jetson-yolo:
    build: .
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # Optional tunables
      - YOLO_MODEL=${YOLO_MODEL:-yolov8n.pt}
      - YOLO_ENGINE=${YOLO_ENGINE:-yolov8n.engine}
      - CONF_THRESH=${CONF_THRESH:-0.80}
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work 
    command: bash

  exporter:
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work 
    command: python3 app/export_engine.py

  alert:
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work 
    restart: unless-stopped
    depends_on:
      - jetson-yolo
    logging:
          driver: json-file
          options:
            max-size: "10m"
            max-file: "3"
    command: python3 -m app.app.run

  preview:
    image: jetson-yolo:local
    runtime: nvidia
    network_mode: host
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ./work:/workspace/work 
    # live overlay preview (remove if headless; or add 'save=True' to write frames)
    command: bash -lc 'yolo predict source="${SRC}" model="${YOLO_ENGINE:-yolov8n.engine}" device=0 stream=True'
